{
    "problem": "Write a function that returns the position of an element in a list.",
    "model": "$pos :: Int -> [Int] -> Int\n$pos c (c' : cs)\n| c==c' =0\n| otherwise = 1 + $pos c cs",
    "examples": "Input: 3 [3, 4, 2]. Output: 0. 3 is the first element of the list.\nInput: 3 [4, 3, 4]. Output: 1. 3 is the second element of the list.",
    "wrongExpression": [
        {
            "pattern": "head _",
            "message": "Don't use head. Instead, use pattern matching."
        },
        {
            "pattern": "tail _",
            "message": "Don't use tail. Instead, use pattern matching."
        },
        {
            "pattern": "_ == True",
            "message": "The pattern 'x == True' is redundant. It's equivalent to just 'x'."
        }
    ],
    "wrongPatterns": [],
    "tests": [
        {
         "value": "$pos 3 [3, 4, 5]",
         "match": "0",
         "result": ""
        },
        {
            "value": "$pos 5 [3, 4, 3, 5]",
            "match": "3",
            "result": ""
        },
        {
            "value": "$pos 4 [3, 4, 5]",
            "match": "1",
            "result": ""
        }
    ]
}

