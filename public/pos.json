{
    "problem": "Write a function that returns the position of an element in a list.",
    "model": "pos :: Int -> [Int] -> Int\npos c (c' : cs)\n| c==c' =0\n| otherwise = 1 + pos c cs",
    "examples": "Input: [3, 4, 2]. Output: False. There are no 2 elements the same.\nInput: [4, 3, 4]. Output: True. The first and the last elements are the same.",
    "wrongExpression": [
        {
            "pattern": "head _",
            "message": "Don't use head. Instead, use pattern matching."
        },
        {
            "pattern": "tail _",
            "message": "Don't use tail. Instead, use pattern matching."
        },
        {
            "pattern": "_ == True",
            "message": "Don't fuck up."
        }
    ],
    "wrongPatterns": [
        {
            "pattern": "_\ntwoSame [] = True_",
            "message": "For a list with no elements, there will not be 2 elements the same!",
            "lineNumber": 2
        }
    ],
    "tests": [
        {
         "value": "pos 3 [3, 4, 5]",
         "match": "0",
         "result": ""
        },
        {
            "value": "pos 5 [3, 4, 3, 5]",
            "match": "3",
            "result": ""
        },
        {
            "value": "pos 4 [3, 4, 5]",
            "match": "1",
            "result": ""
        },
        {
            "value": "pos 5 [3, 6, 5, 9, 6, 10]",
            "match": "2",
            "result": ""
        }
    ]
}

