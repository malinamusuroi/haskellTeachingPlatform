{
    "problem": "Write a function which returns whether a list is lexicographically smaller than another list.",
    "model": "$precedes :: [Int] -> [Int] -> Bool\n$precedes [] s' = True\n$precedes (c : cs) (c' : cs')\n| (c < c') = True\n| (c == c') = $precedes cs cs'\n$precedes s s' = False",
    "examples": "Input: [1,2] [1,1]. Output: False.\nInput: [1,5,3,1] [1,5,3,5]. Output: True.",
    "wrongExpression": [
        {
            "pattern": "head _",
            "message": "Don't use head. Instead, use pattern matching."
        },
        {
            "pattern": "tail _",
            "message": "Don't use tail. Instead, use pattern matching."
        },
        {
            "pattern": "_ == True",
            "message": "The pattern 'x == True' is redundant. It's equivalent to just 'x'."
        }
    ],
    "wrongPatterns": [],
    "tests": [
        {
            "value": "$precedes [1, 2, 3] [1, 2, 4]",
            "match": "True",
            "result": ""
        },
        {
            "value": "$precedes [1, 2, 4] [1, 2, 3]",
            "match": "False",
            "result": ""
           },
        {
            "value": "$precedes [4, 6] [5]",
            "match": "False",
            "result": ""
        }
    ]
}

